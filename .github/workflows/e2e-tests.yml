name: E2E Tests with Cypress

on:
  pull_request:
    branches: [ main ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0.39
        env:
          MYSQL_ROOT_PASSWORD: "@milanesa"
          MYSQL_DATABASE: segui-tus-compras
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -p@milanesa"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Wait for MySQL
        run: |
          until mysqladmin ping -h"127.0.0.1" -P3306 -uroot -p"@milanesa" --silent; do
            echo 'Waiting for MySQL...'
            sleep 1
          done

      - name: Initialize database
        run: |
          mysql -h127.0.0.1 -P3306 -uroot -p"@milanesa" < backend/init.sql

      - name: Build and start backend
        run: |
          cd backend
          chmod +x mvnw
          ./mvnw clean compile
          nohup ./mvnw spring-boot:run \
            -Dspring-boot.run.arguments="--spring.datasource.url=jdbc:mysql://localhost:3306/segui-tus-compras?useSSL=false&allowPublicKeyRetrieval=true --spring.datasource.username=root --spring.datasource.password=@milanesa" &
          echo $! > backend.pid
        env:
          MERCADOLIBRE_API_MOST_RECENT_TOKEN: ${{ secrets.MERCADOLIBRE_API_MOST_RECENT_TOKEN }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Wait for backend to be ready
        run: |
          timeout 300 bash -c 'until curl -f http://localhost:8080/actuator/health 2>/dev/null; do echo "Waiting for backend..."; sleep 5; done'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Start frontend
        run: |
          cd frontend
          nohup npm run preview -- --port 5173 &
          echo $! > frontend.pid

      - name: Wait for frontend to be ready
        run: |
          timeout 120 bash -c 'until curl -f http://localhost:5173 2>/dev/null; do echo "Waiting for frontend..."; sleep 2; done'

      - name: Run Cypress E2E tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend
          browser: chrome
          headless: true
          config-file: cypress.config.ci.js
          spec: cypress/e2e/**/*.cy.js
        env:
          CYPRESS_baseUrl: http://localhost:5173

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: frontend/cypress/screenshots
          retention-days: 7

      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: frontend/cypress/videos
          retention-days: 7

      - name: Cleanup processes
        if: always()
        run: |
          if [ -f backend/backend.pid ]; then
            kill $(cat backend/backend.pid) || true
          fi
          if [ -f frontend/frontend.pid ]; then
            kill $(cat frontend/frontend.pid) || true
          fi